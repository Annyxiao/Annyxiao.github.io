<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>努力成为更好的自己_ZYX</title>
  
  <subtitle>知人者智，自知者明。胜人者有力，自胜者强。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://annyxiao.github.io/"/>
  <updated>2019-08-07T08:36:03.030Z</updated>
  <id>https://annyxiao.github.io/</id>
  
  <author>
    <name>Anny</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="https://annyxiao.github.io/2018/08/07/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://annyxiao.github.io/2018/08/07/hexo搭建个人博客/</id>
    <published>2018-08-07T02:33:09.000Z</published>
    <updated>2019-08-07T08:36:03.030Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><ol><li>首先去官网注册一个github的账号( <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> )</li><li>安装git( <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a> )<ol><li>查看安装版本<code>git --version</code></li></ol></li><li>安装node，npm( <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> )<ol><li>查看安装版本 <code>node -v</code></li><li>查看安装版本<code>npm -v</code></li><li>npm其实是Node.js的包管理工具（package manager）, 其实npm已经在Node.js安装的时候顺带装好了</li></ol></li></ol><h2 id="2-搭建github博客"><a href="#2-搭建github博客" class="headerlink" title="2.搭建github博客"></a>2.搭建github博客</h2><h3 id="2-1创建仓库（登录github，进行操作）"><a href="#2-1创建仓库（登录github，进行操作）" class="headerlink" title="2.1创建仓库（登录github，进行操作）"></a>2.1创建仓库（登录github，进行操作）</h3><p>​    新建一个名为<code>你的github的用户名.github.io</code>,比如我的用户名为Annyxiao,我就建<code>Annyxiao.github</code>的仓库（必须是你的用户名，其他名称无效）,将来我的网站的访问地址就是 ( <a href="http://Annyxiao.github.io">http://Annyxiao.github.io</a> )了，是不是很方便呀！</p><p>​    由此可见，每一个github账户最多只能创建一个这样可以直接只用域名访问的仓库</p><p>​    几个注意点：</p><ol><li><p>注册的邮箱一定要验证，否则不会成功</p></li><li><p>仓库名字必须是：<code>username.github.io</code>,其中<code>username</code>是你的用户名</p></li><li><p>仓库创建成功不会立即生效，需要过一段时间，大概10 - 30 分钟，或者更久，我的等了半个小时才生效。</p><p>创建成功后，默认会在你的这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p></li></ol><h3 id="2-2绑定域名"><a href="#2-2绑定域名" class="headerlink" title="2.2绑定域名"></a>2.2绑定域名</h3><p>​    1. 这里我用的是默认的形式 <code>xxx.github.io</code>来访问，如果你想更个性一点，拥有一个属于自己的域名，也可以去注册一个域名。</p><pre><code>2. 另外，在你绑定了新域名之后，原来的`你的用户名.github.io`并没有失效，而是会自动跳转到你的新域名。</code></pre><h2 id="3-配置SSH-key"><a href="#3-配置SSH-key" class="headerlink" title="3.配置SSH key"></a>3.配置SSH key</h2><p>​    为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p><code>$ cd ~/.ssh  #检查本机已存在的ssh密钥</code></p><p>​    如果提示：No such file or directory 说明你是第一次使用git。</p><p><code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code></p><p>​    然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置—&gt;SSH and GPG keys—&gt;New SSH key—&gt;将刚复制的内容粘贴到key那里，title随便填，保存。</p><h3 id="3-1测试是否成功"><a href="#3-1测试是否成功" class="headerlink" title="3.1测试是否成功"></a>3.1测试是否成功</h3><p><code>$ ssh -T git@github.com  #注意邮箱地址不用改</code></p><p>​    如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>,输入yes，然后会看到：</p><p>​    <code>Hi Annyxiao!You&#39;ve successfully authenticated,but Github does not provide shell access</code></p><p>​    看到这个信息说明SSH已配置成功！     </p><p>​    此时你还需要配置：</p><p>​    <code>$ git config --global user.name &#39;Annyxiao&#39;  //你的github用户名，非昵称</code></p><p>​    <code>$ git config --global user.email &#39;xxx@qq.com&#39; //填写你的github注册邮箱</code></p><h2 id="4-使用hexo写博客"><a href="#4-使用hexo写博客" class="headerlink" title="4.使用hexo写博客"></a>4.使用hexo写博客</h2><h3 id="4-1hexo简介"><a href="#4-1hexo简介" class="headerlink" title="4.1hexo简介"></a>4.1hexo简介</h3><p>​    Hexo是一个简单、快速、强大的基于Github Pages的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><h3 id="4-2原理"><a href="#4-2原理" class="headerlink" title="4.2原理"></a>4.2原理</h3><p>​    由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h3 id="4-3安装前的注意事项"><a href="#4-3安装前的注意事项" class="headerlink" title="4.3安装前的注意事项"></a>4.3安装前的注意事项</h3><pre><code>1. 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用 git bash来执行；2. hexo 不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；3. hexo有2种`_config.yml`文件，一个是根目录下的全局`_config.yml`，一个是各个`theme`下的；</code></pre><h3 id="4-4安装"><a href="#4-4安装" class="headerlink" title="4.4安装"></a>4.4安装</h3><p><code>$ npm install -g hexo</code></p><h3 id="4-5初始化"><a href="#4-5初始化" class="headerlink" title="4.5初始化"></a>4.5初始化</h3><p>​    在电脑的某个地方新建一个名为hexo的文件夹(名字可以随便取),比如我的是<code>E:\blog</code>,由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /e/blog/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>​    hexo会自动下载一些文件到这个目录，包括node_modules,目录结构如下图：</p><p>​    <img src="https://github.com//Annyxiao/annyxiao.github.io/blob/master/images/catalog1.png?raw=true" alt></p><p>​        </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">//生成</span></span><br><span class="line">$ hexo s <span class="comment">//启动服务</span></span><br></pre></td></tr></table></figure><p>​    执行以上命令之后，hexo就会在public文件夹升车鞥相应html文件，这些文件将来都是要提交到github去的。</p><p>​    <code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先去官网注册一个github的账号( &lt;a href=&quot;https://github.com&quot;
      
    
    </summary>
    
    
      <category term="搭建博客" scheme="https://annyxiao.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
