[{"title":".vue文件简单引入less","date":"2019-11-13T06:00:20.000Z","path":"2019/11/13/vue文件简单引入less/","text":"第一步：安装less和less-loadernpm install less less-loader 第二步：在build文件夹下的.base.conf.js文件中新增rules1234&#123; test: /\\.less$/, loader: \"style-loader!css-loader!less-loader\"&#125; 第三步：.vue文件中使用less12345&lt;style scoped lang=\"less\"&gt;//注意：需指定为less div &#123; font-size: 14px; &#125;&lt;/style&gt; 也可以导入引用外部 .less文件","tags":[]},{"title":"hexo搭建个人博客-更新主题","date":"2018-08-08T01:32:51.000Z","path":"2018/08/08/hexo搭建个人博客-更新主题/","text":"​ 前面我们已经学会了博客的搭建，这次我们来换一个博客的主题，让我们的博客变的更漂亮，更个性，更与众不同，我们可以去[hexo的主题官网]:https://hexo.io/themes/ 挑选自己喜欢的主题风格。里面收录了很多大牛自己写的漂亮的主题。 ​ 选择一个自己喜欢的主题，每个主题都在Github上面开源的代码。下面是我自己选择的[秋过冬漫长主题]:https://github.com/chaooo 为例来介绍一下。 1.安装您可以直接到 [BlueLake发布页]:https://github.com/chaooo/hexo-theme-BlueLake 下载，然后解压拷贝到theme 目录下，修改配置即可。 不过我还是推荐使用git来checkout代码，之后也可以通过git pull来快速更新。 1.1安装主题再根目录下打开终端窗口： 12git bash 1 | $ git clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake 1.2安装主题渲染器BlueLake是基于jade和stylus写的，所以需要安装hexo-renderer-jade和hexo-renderer-styl来渲染 123git bash1 | $ npm install hexo-renderer-jade@0.3.0 --save2 | $ npm install hexo-renderer-stylus --save 1.3启用主题打开根_config.yml配置文件，找到theme字段，将其值改为BlueLake（先确认主题文件夹名称是否为BlueLake）。 12根_config.yml1 | theme: BlueLake 1.4验证首先启动 Hexo 本地站点，并开启调试模式： 12git bash1 | $ hexo s --debug 在服务启动的过程中，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。当命令行输出中提示出：INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 此时即可使用浏览器访问http://localhost:4000，检查站点是否正确运行。 1.5更新主题今后若主题添加了新功能正是您需要的，您可以直接 git pull来更新主题 123git bash1 | cd theme/BlueLake2 | git pull 2.配置2.1配置网站头部显示文字打开根_config.yml，找到： 12345根_config.yml1 | title:2 | subtitle:3 | description:4 | author: ​ title 和 subtitle 分别是网站主标题和副标题，会显示在网站头部；description在网站界面不会显示，内容会加入网站源码的meta标签中，主要用于SEO；author就填写网站所拥有者的名字，会在网站底部的Coprright处有所显示。 2.2设置语言该主题目前有七种语言：简体中文(zh-CN)，繁体中文(zh-TW)，英语(en)，法语(fr-FR)，德语(de-DE)，韩语(ko)，西班牙语(es-ES)；例如选用简体中文，在根_config.yml配置如下： 12根_config.yml1 | language: zh-CN 2.3设置菜单打开主题_config.yml，找到： 1234567891011121314主题_config.yml1 | menu:2 | - page: home3 | directory: .4 | icon: fa-home5 | - page: archive6 | directory: archives/7 | icon: fa-archive8 | # - page: about9 | # directory: about/10 | # icon: fa-user11 | - page: rss12 | directory: atom.xml13 | icon: fa-rss","tags":[]},{"title":"hexo+github搭建个人博客 - 初步","date":"2018-08-07T02:33:09.000Z","path":"2018/08/07/hexo搭建个人博客-初步搭建/","text":"1.准备工作 首先去官网注册一个github的账号( https://github.com ) 安装git( https://git-scm.com/ ) 查看安装版本git --version 安装node，npm( https://nodejs.org/en/ ) 查看安装版本 node -v 查看安装版本npm -v npm其实是Node.js的包管理工具（package manager）, 其实npm已经在Node.js安装的时候顺带装好了 2.搭建github博客2.1创建仓库（登录github，进行操作）​ 新建一个名为你的github的用户名.github.io,比如我的用户名为Annyxiao,我就建Annyxiao.github的仓库（必须是你的用户名，其他名称无效）,将来我的网站的访问地址就是 ( http://Annyxiao.github.io )了，是不是很方便呀！ ​ 由此可见，每一个github账户最多只能创建一个这样可以直接只用域名访问的仓库 ​ 几个注意点： 注册的邮箱一定要验证，否则不会成功 仓库名字必须是：username.github.io,其中username是你的用户名 仓库创建成功不会立即生效，需要过一段时间，大概10 - 30 分钟，或者更久，我的等了半个小时才生效。 创建成功后，默认会在你的这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。 2.2绑定域名​ 1. 这里我用的是默认的形式 xxx.github.io来访问，如果你想更个性一点，拥有一个属于自己的域名，也可以去注册一个域名。 2. 另外，在你绑定了新域名之后，原来的`你的用户名.github.io`并没有失效，而是会自动跳转到你的新域名。 3.配置SSH key​ 为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 $ cd ~/.ssh #检查本机已存在的ssh密钥 ​ 如果提示：No such file or directory 说明你是第一次使用git。 ssh-keygen -t rsa -C &quot;邮件地址&quot; ​ 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置—&gt;SSH and GPG keys—&gt;New SSH key—&gt;将刚复制的内容粘贴到key那里，title随便填，保存。 3.1测试是否成功$ ssh -T git@github.com #注意邮箱地址不用改 ​ 如果提示Are you sure you want to continue connecting (yes/no)?,输入yes，然后会看到： ​ Hi Annyxiao!You&#39;ve successfully authenticated,but Github does not provide shell access ​ 看到这个信息说明SSH已配置成功！ ​ 此时你还需要配置： ​ $ git config --global user.name &#39;Annyxiao&#39; //你的github用户名，非昵称 ​ $ git config --global user.email &#39;xxx@qq.com&#39; //填写你的github注册邮箱 4.使用hexo写博客4.1hexo简介​ Hexo是一个简单、快速、强大的基于Github Pages的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 4.2原理​ 由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。 4.3安装前的注意事项1. 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用 git bash来执行； 2. hexo 不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导； 3. hexo有2种`_config.yml`文件，一个是根目录下的全局`_config.yml`，一个是各个`theme`下的； 4.4安装$ npm install -g hexo 4.5初始化​ 在电脑的某个地方新建一个名为hexo的文件夹(名字可以随便取),比如我的是E:\\blog,由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。 12$ cd /e/blog/$ hexo init ​ hexo会自动下载一些文件到这个目录，包括node_modules,目录结构如下图： ​ ​ 12$ hexo g //生成$ hexo s //启动服务 ​ 执行以上命令之后，hexo就会在public文件夹升车鞥相应html文件，这些文件将来都是要提交到github去的。 ​ hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容。","tags":[{"name":"搭建博客","slug":"搭建博客","permalink":"https://annyxiao.github.io/tags/搭建博客/"}]}]